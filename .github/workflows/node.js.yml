# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "spin-postgres" ]
  pull_request:
    branches: [ "spin-postgres" ]

env:
  SAMPLE_KEY: yamlSampleKey

jobs:
  spin-up-postgres:

    # Run on Linux OS, as required for containers:
    runs-on: ubuntu-latest

    # Ensure limited resource usage:
    timeout-minutes: 5

    # Starting point image?
    container: node:22-bookworm

    # We will run a service within our job:
    services:
      # Label our database service container:
      postgres:
        # Thanks, Docker Hub
        image: postgres
        env:
          # Not so secret, but won't last long?
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Now check out the code
        uses: actions/checkout@v4
      - name: Install NPM packages
        run: |
          npm ci
          npm run build
      - name: Start the server
        run: node dist/app.js &
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: postgres
      - name: Make test curl
        run: |
          echo Curl result: $(curl http://localhost:3000/time)


